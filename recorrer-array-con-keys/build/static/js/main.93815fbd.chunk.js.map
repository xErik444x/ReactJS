{"version":3,"sources":["Components/Lista.js","App.js","reportWebVitals.js","index.js"],"names":["Lista","useState","arrayNumero","setarrayNumero","length","numero","setNumero","className","type","onClick","console","log","map","item","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAwCeA,G,KAnCD,WAAO,IAAD,EAEsBC,mBAAS,CAAC,IAFhC,mBAETC,EAFS,KAEIC,EAFJ,OAGYF,mBAASC,EAAYE,OAAS,GAH1C,mBAGTC,EAHS,KAGDC,EAHC,KAoBhB,OACI,qBAAKC,UAAU,4CAAf,SACI,gCACI,gEACA,uCACA,wBAAQC,KAAK,SAASD,UAAU,kBAAkBE,QApBtC,WACpBH,EAAUD,EAAS,GAEnBK,QAAQC,IAAI,SAEZR,EAAe,GAAD,mBACPD,GADO,CAEVG,MAaI,qBAEIH,EAAYU,KAAI,SAACC,EAAMC,GAAP,OAAiB,8BAAgBA,EAAhB,IAAwBD,IAAhBC,aCnB9CC,MATf,WACE,OACE,qBAAKR,UAAU,MAAf,SAEE,cAAC,EAAD,OCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.93815fbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\r\n\r\n//sfc crea un stateless\r\nconst Lista = () => {\r\n\r\n    const [arrayNumero, setarrayNumero] = useState([1]);\r\n    const [numero, setNumero] = useState(arrayNumero.length + 1);\r\n\r\n    const agregarElemento = () => {\r\n        setNumero(numero + 1);\r\n\r\n        console.log(\"click\");\r\n        // ... Sirven para unir o concatenar arrays (se llama propagacion)\r\n        setarrayNumero([\r\n            ...arrayNumero,\r\n            numero\r\n        ])\r\n        // setarrayNumero([\r\n        //     ...arrayNumero,\r\n        //     arrayNumero.length + 1\r\n        // ])\r\n\r\n    }\r\n    return (\r\n        <div className=\"d-flex justify-content-center text-center\">\r\n            <div>\r\n                <h1>JSX Uso de arrays y constantes</h1>\r\n                <h2>Lista</h2>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={agregarElemento}>Agregar</button>\r\n                {   //el index hay que pasarlo como atributo para que funcione\r\n                    arrayNumero.map((item, index) => <p key={index}>{index}-{item}</p>)\r\n                }\r\n            </div>\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Lista;","import React from 'react';\n// import Jsx from './Components/Jsx';\nimport Lista from './Components/Lista';\nimport 'bootswatch/dist/superhero/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Jsx /> */}\n      <Lista />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}