{"version":3,"sources":["components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Formulario","useState","nombre","apellido","datos","setDatos","handleInputChange","event","target","name","value","console","log","className","onSubmit","preventDefault","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kLAyDeA,EAvDI,WAAO,IAAD,EAEKC,mBAAS,CAC/BC,OAAQ,GACRC,SAAU,KAJO,mBAEdC,EAFc,KAEPC,EAFO,KAMfC,EAAoB,SAACC,GAEvBF,EAAS,2BACFD,GADC,kBAEHG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAEtCC,QAAQC,IAAIL,EAAMC,OAAOC,OAS7B,OACI,eAAC,WAAD,WACI,6CACA,uBAAMI,UAAU,MAAMC,SARV,SAACP,GACjBA,EAAMQ,iBACNJ,QAAQC,IAAR,UAAeR,EAAMF,OAArB,YAA+BE,EAAMD,YAMjC,UACI,qBAAKU,UAAU,WAAf,SACI,uBACIG,KAAK,OACLC,YAAY,iBACZJ,UAAU,eACVJ,KAAK,SACLS,SAAUZ,MAIlB,qBAAKO,UAAU,WAAf,SACI,uBACIG,KAAK,OACLC,YAAY,mBACZJ,UAAU,eACVJ,KAAK,WACLS,SAAUZ,MAIlB,qBAAKO,UAAU,WAAf,SACI,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,yBAIR,+BAAKZ,EAAMF,OAAX,MAAsBE,EAAMD,gBC1CzBgB,MARf,WACE,OACE,qBAAKN,UAAU,iBAAf,SACE,cAAC,EAAD,OCOSO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1d1b3517.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n\r\nconst Formulario = () => {\r\n\r\n    const [datos, setDatos] = useState({\r\n        nombre: \"\",\r\n        apellido: \"\"\r\n    });\r\n    const handleInputChange = (event) => {\r\n        //se hace uso de las propiedades computadas para poner variables como nombres del objeto datos\r\n        setDatos({\r\n            ...datos,\r\n            [event.target.name]: event.target.value\r\n        })\r\n        console.log(event.target.name)\r\n    }\r\n\r\n    //cancela el boton de submit y ejecuta cualquier otra funcion para analizar o enviar los datos\r\n    const enviarDatos = (event) => {\r\n        event.preventDefault();\r\n        console.log(`${datos.nombre} ${datos.apellido}`)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1>Formularios</h1>\r\n            <form className=\"row\" onSubmit={enviarDatos}>\r\n                <div className=\"col-md-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Ingrese Nombre\"\r\n                        className=\"form-control\"\r\n                        name=\"nombre\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Ingrese Apellido\"\r\n                        className=\"form-control\"\r\n                        name=\"apellido\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <button className=\"btn btn-primary\" type=\"submit\">Enviar</button>\r\n\r\n                </div>\r\n            </form>\r\n            <h3>{datos.nombre} - {datos.apellido}</h3>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Formulario;","import Formulario from './components/Formulario';\n\nfunction App() {\n  return (\n    <div className=\"container mt-5\">\n      <Formulario />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}